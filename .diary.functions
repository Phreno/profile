#
#  ____  _                  
# |  _ \(_) __ _ _ __ _   _ 
# | | | | |/ _` | '__| | | |
# | |_| | | (_| | |  | |_| |
# |____/|_|\__,_|_|   \__, |
#                     |___/ 
#

# chiffre un fichier du journal
diary.cipher(){
    file="${1:?}"
    openssl enc -e -aes-256-cbc -in "${file}${UNLOCKED}" -out "${file}${LOCKED}" -pass "pass:${DIARY_KEY}"
    rm "${file}${UNLOCKED}"
}

# déchiffre un fichier du journal
diary.decipher(){
    file="${1:?}"
    if [ -f "${file}${LOCKED}" ]
    then
        openssl enc -d -aes-256-cbc -in "${file}${LOCKED}" -out "${file}${UNLOCKED}" -pass "pass:${DIARY_KEY}"
    fi
    # TODO: le fichier n existe pas
}

# récupère le nom du journal du jour
diary.get_today_path(){
    echo "${DIARY_DIR}/$(date.Ymd)"
}

# affiche la journal sous forme de dsv
diary.display(){
    file="${1:?}"
    diary.decipher "${file}"
    cat "${file}${UNLOCKED}"
    diary.cipher "${file}"
}


# affiche tous les journaux
diary.raw_history(){
    for file in $(find "${DIARY_DIR}" -type f -name "*${LOCKED}");
    do
        diary.display "${file%${LOCKED}}"
    done
}

#  affiche le journal
diary.history(){
    diary.raw_history | column -t -s ";" | sort -r
}

# Ajoute une nouvelle ligne dans le journal du jour
diary.new(){
    today="$(diary.get_today_path)"
    diary.decipher "${today}"
    echo "$(date.Y_m_d);$(date.H_M);#${1// / #};${2}" >> "${today}${UNLOCKED}"
    cat "${today}${UNLOCKED}" | column -t -s ";" | sort -r
    diary.cipher "${today}"
}


# Affiche le journal du jour
diary.today_raw(){
    today="${DIARY_DIR}/$(date.Ymd)"
    diary.display "${today}"
}

# Affiche le journal du jour
diary.today(){
    diary.today_raw | column -t -s ";" | sort -r
}

# Filtre les seules entrées correspondant au tag fourni en paramètre
diary.filterTag(){
  tag="${1:?}"
  diary.history | egrep "#${tag}"
}
